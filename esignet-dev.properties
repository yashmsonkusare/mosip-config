# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

# Follow properites have their values assigned via 'overrides' environment variables of config server docker.
# DO NOT define these in any of the property files.  They must be passed as env variables.  Refer to config-server
# helm chart:
# db.dbuser.password
# keycloak.external.url
# keycloak.internal.host
# keycloak.internal.url
# keycloak.admin.password
# mosip.auth.client.secret   (convention: <realm>.<keycloak client name>.secret)
# mosip.ida.client.secret
# mosip.admin.client.secret
# mosip.reg.client.secret
# mosip.prereg.client.secret
# softhsm.kernel.pin
# softhsm-security-pin
# email.smtp.host
# email.smtp.username
# email.smtp.secret
# mosip.kernel.tokenid.uin.salt
# mosip.kernel.tokenid.partnercode.salt
# mosip.api.internal.url
# mosip.api.public.url

config.server.file.storage.uri=${spring.cloud.config.uri}/${spring.application.name}/default/${spring.cloud.config.label}/

## ------------------------------------------------- e-Signet ----------------------------------------------------------
mosip.esignet.misp.license.key=r4oQCs7z8Ljr2xrg65wscvbqRdspnZUFEWOHUXJoshJoOSyJjb
mosip.esignet.amr-acr-mapping-file-url=${config.server.file.storage.uri}amr-acr-mapping.json
mosip.esignet.auth-txn-id-length=10
mosip.esignet.supported-id-regex=\\S*
mosip.esignet.id-token-expire-seconds=3600
mosip.esignet.access-token-expire-seconds=3600
mosip.esignet.link-code-expire-in-secs=60

mosip.esignet.header-filter.paths-to-validate={'${server.servlet.path}/authorization/send-otp', \
  '${server.servlet.path}/authorization/authenticate', \
  '${server.servlet.path}/authorization/auth-code'}

## ------------------------------------------ e-Signet binding ---------------------------------------------------------

mosip.esignet.binding.salt-length=16
mosip.esignet.binding.audience-id=esignet-binding
mosip.esignet.binding.key-expire-days=10
mosip.esignet.binding.encrypt-binding-id=false
mosip.kernel.otp.expiry-time=300
kafka.profile=kafka.svc.cluster.local
kafka.port=9092

## -------------------------------------- Authentication & Authorization -----------------------------------------------

mosip.esignet.security.auth.post-urls={}
mosip.esignet.security.auth.put-urls={}
mosip.esignet.security.auth.get-urls={}

mosip.esignet.security.ignore-csrf-urls=${server.servlet.path}/oidc/**,${server.servlet.path}/oauth/**,\
  ${server.servlet.path}/actuator/**,/favicon.ico,${server.servlet.path}/error,\
  ${server.servlet.path}/swagger-ui/**,${server.servlet.path}/v3/api-docs/**,\
  ${server.servlet.path}/linked-authorization/link-transaction,${server.servlet.path}/linked-authorization/authenticate,\
  ${server.servlet.path}/linked-authorization/consent,${server.servlet.path}/binding/**,${server.servlet.path}/client-mgmt/**,\
  ${server.servlet.path}/system-info/**

mosip.esignet.security.ignore-auth-urls=${server.servlet.path}/csrf/**,${server.servlet.path}/authorization/**,\
  ${server.servlet.path}/linked-authorization/**,${server.servlet.path}/oidc/**,${server.servlet.path}/oauth/**,\
  ${server.servlet.path}/actuator/**,/favicon.ico,${server.servlet.path}/error,${server.servlet.path}/swagger-ui/**,\
  ${server.servlet.path}/v3/api-docs/**,${server.servlet.path}/binding/**,${server.servlet.path}/client-mgmt/**,\
  ${server.servlet.path}/system-info/**

#spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.external.url}/auth/realms/mosip
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${keycloak.external.url}/auth/realms/mosip/protocol/openid-connect/certs

##------------------------------------------ Kafka configurations ------------------------------------------------------
spring.kafka.bootstrap-servers=kafka-0.kafka-headless.${kafka.profile}:${kafka.port},kafka-1.kafka-headless.${kafka.profile}:${kafka.port},kafka-2.kafka-headless.${kafka.profile}:${kafka.port}
spring.kafka.consumer.group-id=esignet-dev-consumer
spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.listener.concurrency=1

mosip.esignet.kafka.linked-session.topic=esignet-dev-linked
mosip.esignet.kafka.linked-auth-code.topic=esignet-dev-consented

## ------------------------------------------- Integrations ------------------------------------------------------------

mosip.esignet.integration.scan-base-package=io.mosip.esignet.mock.integration,io.mosip.authentication.esignet.integration
mosip.esignet.integration.binding-validator=BindingValidatorServiceImpl
mosip.esignet.integration.authenticator=IdaAuthenticatorImpl
mosip.esignet.integration.key-binder=IdaKeyBinderImpl
mosip.esignet.integration.audit-plugin=IdaAuditPluginImpl
mosip.esignet.integration.captcha-validator=GoogleRecaptchaValidatorService

#mosip.esignet.integration.scan-base-package=io.mosip.householdid.esignet.integration.config,io.mosip.householdid.esignet.integration.service
#mosip.esignet.integration.binding-validator=BindingValidatorServiceImpl
#mosip.esignet.integration.authenticator=HouseHoldAuthenticationService
#mosip.esignet.integration.key-binder=HouseHoldKeyBinder
#mosip.esignet.integration.audit-plugin=HouseholdLoggerAuditService
#mosip.esignet.integration.captcha-validator=GoogleRecaptchaValidatorService

# captcha validator
mosip.esignet.send-otp.captcha-required=false
mosip.esignet.captcha-validator.url=https://www.google.com/recaptcha/api/siteverify
mosip.esignet.captcha-validator.secret=${esignet.captcha.secret.key}
mosip.esignet.captcha-validator.site-key=${esignet.captcha.site.key}

# IDA integration props
mosip.esignet.authenticator.ida-auth-id=mosip.identity.kycauth
mosip.esignet.authenticator.ida-exchange-id=mosip.identity.kycexchange
mosip.esignet.authenticator.ida-send-otp-id=mosip.identity.otp
mosip.esignet.authenticator.ida-version=1.0
mosip.esignet.authenticator.ida-domainUri=https://${mosip.esignet.host}
mosip.esignet.authenticator.ida.cert-url=https://${mosip.api.public.host}/mosip-certs/ida-partner.cer
mosip.esignet.authenticator.ida.kyc-auth-url=https://${mosip.api.internal.host}/idauthentication/v1/kyc-auth/delegated/${mosip.esignet.misp.license.key}/
mosip.esignet.authenticator.ida.kyc-exchange-url=https://${mosip.api.internal.host}/idauthentication/v1/kyc-exchange/delegated/${mosip.esignet.misp.license.key}/
mosip.esignet.authenticator.ida.send-otp-url=https://${mosip.api.internal.host}/idauthentication/v1/otp/${mosip.esignet.misp.license.key}/
mosip.esignet.binder.ida.key-binding-url=https://${mosip.api.internal.host}/idauthentication/v1/identity-key-binding/delegated/${mosip.esignet.misp.license.key}/
mosip.esignet.authenticator.ida.get-certificates-url=https://${mosip.api.internal.host}/idauthentication/v1/internal/getAllCertificates
mosip.esignet.authenticator.ida.auth-token-url=https://${mosip.api.internal.host}/v1/authmanager/authenticate/clientidsecretkey
mosip.esignet.authenticator.ida.audit-manager-url=https://${mosip.api.internal.host}/v1/auditmanager/audits
mosip.esignet.authenticator.ida.client-id=mosip-ida-client
mosip.esignet.authenticator.ida.secret-key=${mosip.ida.client.secret}
mosip.esignet.authenticator.ida.app-id=ida
mosip.esignet.authenticator.ida-env=Developer
mosip.esignet.authenticator.ida.otp-channels=email,phone


# IDA integration props
#mosip.esignet.ida.domain=qa3.mosip.net
#mosip.esignet.authenticator.ida-auth-id=mosip.identity.kycauth
#mosip.esignet.authenticator.ida-kyc-id=mosip.identity.kyc
#mosip.esignet.authenticator.ida-auth-only-id=mosip.identity.auth
#mosip.esignet.authenticator.ida-exchange-id=mosip.identity.kycexchange
#mosip.esignet.authenticator.ida-send-otp-id=mosip.identity.otp
#mosip.esignet.authenticator.ida-version=1.0
#mosip.esignet.authenticator.ida-domainUri=${mosip.esignet.domain.url}
#mosip.esignet.authenticator.ida.cert-url=https://raw.githubusercontent.com/mosip/mosip-config/develop-v3/ida-partner.cer
#mosip.esignet.authenticator.ida.kyc-auth-url=https://${mosip.esignet.ida.domain}/idauthentication/v1/kyc-auth/delegated/${mosip.esignet.misp.license.key}/
#mosip.esignet.authenticator.ida.kyc-exchange-url=https://${mosip.esignet.ida.domain}/idauthentication/v1/kyc-exchange/delegated/${mosip.esignet.misp.license.key}/
#mosip.esignet.authenticator.ida.send-otp-url=https://${mosip.esignet.ida.domain}/idauthentication/v1/otp/${mosip.esignet.misp.license.key}/
#mosip.esignet.binder.ida.key-binding-url=${mosip.esignet.ida.domain}/idauthentication/v1/identity-key-binding/delegated/${mosip.esignet.misp.license.key}/
#mosip.esignet.authenticator.ida.get-certificates-url=https://${mosip.esignet.ida.domain}/idauthentication/v1/internal/getAllCertificates
#mosip.esignet.authenticator.ida.auth-token-url=https://${mosip.esignet.ida.domain}/v1/authmanager/authenticate/clientidsecretkey
#mosip.esignet.authenticator.ida.audit-manager-url=https://${mosip.esignet.ida.domain}/v1/auditmanager/audits
#mosip.esignet.authenticator.ida.client-id=mosip-ida-client
#mosip.esignet.authenticator.ida.secret-key=${mosip.ida.client.secret}
#mosip.esignet.authenticator.ida.app-id=ida
#mosip.esignet.authenticator.ida-env=Developer
#mosip.esignet.authenticator.ida.otp-channels=email,phone
#mosip.esignet.authenticator.ida.kyc-url=https://${mosip.esignet.ida.domain}/idauthentication/v1/kyc/${mosip.esignet.misp.license.key}/
#mosip.esignet.authenticator.ida.auth-url=https://${mosip.esignet.ida.domain}/idauthentication/v1/auth/${mosip.esignet.misp.license.key}/
#mosip.esignet.authenticator.ida.auth-only-enabled=false
#mosip.ida.kyc.exchange.sign.applicationid=OIDC_PARTNER
#mosip.ida.kyc.auth.partner.applicationid=OIDC_AUTH_PARTNER

#mosip.esignet.authenticator.ida.wrapper.auth.partner.id=esignet-818
#mosip.esignet.authenticator.ida.wrapper.auth.partner.apikey=638244
#mosip.esignet.authenticator.ida.wrapper.auth.partner.apikey=387901
#mosip.esignet.authenticator.ida.wrapper.auth.partner.id=789
#mosip.esignet.authenticator.ida.wrapper.auth.partner.apikey=633926
#mosip.esignet.authenticator.ida.wrapper.auth.reference.id=dummy

#application.id=dummy
#identity-cache.reference.id=dummy

#mosip.kernel.tokenid.length=36
#mosip.kernel.tokenid.uin.salt=zHuDEAbmbxiUbUShgy6pwUhKh9DE0EZn9kQDKPPKbWscGajMwf
#mosip.kernel.tokenid.partnercode.salt=yS8w5Wb6vhIKdf1msi4LYTJks7mqkbmITk2O63Iq8h0bkRlD0d

## IDA mapping
#ida.mapping.json.filename=id-authentication-wrapper-mapping.json
#mosip.ida.mapping.json-uri=${config.server.file.storage.uri}${ida.mapping.json.filename} 
#ida.mapping.property.source=url:${mosip.ida.mapping.json-uri}

#mosip.kernel.xsdstorage-uri=${config.server.file.storage.uri}
#mosip.kernel.xsdfile=mosip-cbeff.xsd

# Mock IDA integration props
#mosip.esignet.mock.authenticator.persona-repo=/home/mosip/mockida
#mosip.esignet.mock.authenticator.policy-repo=/home/mosip/mockida
#mosip.esignet.mock.authenticator.claims-mapping-file=/home/mosip/mockida/claims_attributes_mapping.json
mosip.esignet.mock.authenticator.get-identity-url=https://${mosip.api.public.host}/v1/mock-identity-system/identity
mosip.esignet.mock.authenticator.kyc-auth-url=https://${mosip.api.public.host}/v1/mock-identity-system/kyc-auth
mosip.esignet.mock.authenticator.kyc-exchange-url=https://${mosip.api.public.host}/v1/mock-identity-system/kyc-exchange
mosip.esignet.mock.authenticator.ida.otp-channels=${mosip.esignet.authenticator.ida.otp-channels}
mosip.esignet.mock.authenticator.send-otp=https://${mosip.api.public.host}/v1/mock-identity-system/send-otp
mosip.esignet.mock.supported.bind-auth-factor-types={'WLA'}

## ------------------------------------------ oauth & openid supported values ------------------------------------------

## supported scopes
mosip.esignet.supported.authorize.scopes={'Manage-Identity-Data','Manage-VID','Manage-Authentication','Manage-Service-Requests','Manage-Credentials'}
mosip.esignet.supported.openid.scopes={'profile','email','phone'}
mosip.esignet.openid.scope.claims={'profile' : {'name','given_name','family_name','address','gender','birthdate','picture','email','phone_number'},'email' : {'email'}, 'phone' : {'phone_number'}}

## supported authorization processing flow to be used, Currently only supports Authorization Code Flow.
mosip.esignet.supported.response.types={'code'}

## Form of Authorization Grant presented to token endpoint
mosip.esignet.supported.grant.types={'authorization_code'}

## specifies how the Authorization Server displays the authentication and consent user interface pages to the End-User
# page-The Authorization Server SHOULD display the authentication and consent UI consistent with a full User Agent page view. If the display parameter is not specified, this is the default display mode.
# popup-The Authorization Server SHOULD display the authentication and consent UI consistent with a popup User Agent window. The popup User Agent window should be of an appropriate size for a login-focused dialog and should not obscure the entire window that it is popping up over.
# touch-The Authorization Server SHOULD display the authentication and consent UI consistent with a device that leverages a touch interface.
# wap-The Authorization Server SHOULD display the authentication and consent UI consistent with a "feature phone" type display.
mosip.esignet.supported.ui.displays={'page','popup','touch','wap'}

## specifies whether the Authorization Server prompts the End-User for reauthentication and consent
# none-The Authorization Server MUST NOT display any authentication or consent user interface pages.
# An error is returned if an End-User is not already authenticated or the Client does not have pre-configured consent
# for the requested Claims or does not fulfill other conditions for processing the request.
# The error code will typically be login_required, interaction_required, or another code defined in Section 3.1.2.6.
# This can be used as a method to check for existing authentication and/or consent.
# login-The Authorization Server SHOULD prompt the End-User for reauthentication. If it cannot reauthenticate the End-User, \
#  it MUST return an error, typically login_required.
# consent-The Authorization Server SHOULD prompt the End-User for consent before returning information to the Client.
# If it cannot obtain consent, it MUST return an error, typically consent_required.
# select_account-The Authorization Server SHOULD prompt the End-User to select a user account. This enables an End-User
# who has multiple accounts at the Authorization Server to select amongst the multiple accounts that they might have current
# sessions for. If it cannot obtain an account selection choice made by the End-User, it MUST return an error,
# typically account_selection_required.
mosip.esignet.supported.ui.prompts={'none','login','consent','select_account'}

## Type of the client assertion
mosip.esignet.supported.client.assertion.types={'urn:ietf:params:oauth:client-assertion-type:jwt-bearer'}

## Type of the client authentication methods for token endpoint
mosip.esignet.supported.client.auth.methods={'private_key_jwt'}


## ---------------------------------------- Cache configuration --------------------------------------------------------

mosip.esignet.cache.secure.individual-id=true
mosip.esignet.cache.store.individual-id=true
mosip.esignet.cache.security.secretkey.reference-id=TRANSACTION_CACHE
mosip.esignet.cache.security.algorithm-name=AES/ECB/PKCS5Padding

mosip.esignet.cache.names=clientdetails,preauth,authenticated,authcodegenerated,userinfo,linkcodegenerated,linked,linkedcode,linkedauth,consented,authtokens,bindingtransaction,encryptedIdentityData,kycauthcache

#spring.cache.type=redis
#spring.cache.cache-names=${mosip.esignet.cache.names}
#spring.redis.host=localhost
#spring.redis.port=6379
management.health.redis.enabled=false

spring.cache.type=simple
mosip.esignet.cache.key.hash.algorithm=SHA3-256
mosip.esignet.cache.size={'clientdetails' : 200, 'preauth': 200, 'authenticated': 200, 'authcodegenerated': 200, 'userinfo': 200, \
   'linkcodegenerated' : 500, 'linked': 200 , 'linkedcode': 200, 'linkedauth' : 200 , 'consented' :200, 'authtokens': 2, 'bindingtransaction': 500, 'encryptedIdentityData': 1500, 'kycauthcache': 1500 }
mosip.esignet.cache.expire-in-seconds={'clientdetails' : 86400, 'preauth': 600, 'authenticated': 120, 'authcodegenerated': 60, \
  'userinfo': ${mosip.esignet.access-token-expire-seconds}, 'linkcodegenerated' : ${mosip.esignet.link-code-expire-in-secs}, \
  'linked': 60 , 'linkedcode': ${mosip.esignet.link-code-expire-in-secs}, 'linkedauth' : 60, 'consented': 120, 'authtokens': 28800, 'bindingtransaction': 60, 'encryptedIdentityData': 500, 'kycauthcache': 60 }

## ------------------------------------------ Discovery openid-configuration -------------------------------------------

mosip.esignet.domain.url=https://esignet-dev.dev.mosip.net
mosip.esignet.discovery.issuer-id=${mosip.esignet.domain.url}${server.servlet.path}

mosip.esignet.discovery.key-values={'issuer': '${mosip.esignet.discovery.issuer-id}' ,\
  \ 'authorization_endpoint': '${mosip.esignet.domain.url}${server.servlet.path}/authorize' , \
  \ 'token_endpoint': '${mosip.esignet.domain.url}${server.servlet.path}/oauth/token' ,\
  \ 'userinfo_endpoint' : '${mosip.esignet.domain.url}${server.servlet.path}/oidc/userinfo' , \
  \ 'jwks_uri' : '${mosip.esignet.domain.url}${server.servlet.path}/oauth/.well-known/jwks.json' , \
  \ 'scopes_supported' : ${mosip.esignet.supported.openid.scopes}, \
  \ 'response_types_supported' : ${mosip.esignet.supported.response.types}, \
  \ 'acr_values_supported' : {'mosip:idp:acr:password', 'mosip:idp:acr:static-code', 'mosip:idp:acr:generated-code', 'mosip:idp:acr:linked-wallet', 'mosip:idp:acr:biometrics'},\
  \ 'userinfo_signing_alg_values_supported' : {'RS256'}, \
  \ 'userinfo_encryption_alg_values_supported' : {'RSAXXXXX'},\
  \ 'userinfo_encryption_enc_values_supported' : {'A128GCM'}, \
  \ 'response_modes_supported' : { 'query' }, \
  \ 'token_endpoint_auth_methods_supported' : ${mosip.esignet.supported.client.auth.methods}, \
  \ 'token_endpoint_auth_signing_alg_values_supported' : {'RS256'}, \
  \ 'id_token_signing_alg_values_supported' : {'RS256'}, \
  \ 'claim_types_supported': {'normal'}, \
  \ 'claims_supported' : {'name','address','gender','birthdate','picture','email','phone_number','individual_id'}, \
  \ 'claims_locales_supported' : {'en'}, \
  \ 'display_values_supported' : ${mosip.esignet.supported.ui.displays}, \
  \ 'ui_locales_supported' : {'en'} }

##----------------------------------------- Database properties --------------------------------------------------------

mosip.esignet.database.hostname=postgres-postgresql.postgres
mosip.esignet.database.port=5432
spring.datasource.url=jdbc:postgresql://${mosip.esignet.database.hostname}:${mosip.esignet.database.port}/mosip_esignet_dev?currentSchema=esignet
spring.datasource.username=esignetdevuser
spring.datasource.password=${db.dbuser.password}

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#------------------------------------ Key-manager specific properties --------------------------------------------------
#Crypto asymmetric algorithm name
mosip.kernel.crypto.asymmetric-algorithm-name=RSA/ECB/OAEPWITHSHA-256ANDMGF1PADDING
#Crypto symmetric algorithm name
mosip.kernel.crypto.symmetric-algorithm-name=AES/GCM/PKCS5Padding
#Keygenerator asymmetric algorithm name
mosip.kernel.keygenerator.asymmetric-algorithm-name=RSA
#Keygenerator symmetric algorithm name
mosip.kernel.keygenerator.symmetric-algorithm-name=AES
#Asymmetric algorithm key length
mosip.kernel.keygenerator.asymmetric-key-length=2048
#Symmetric algorithm key length
mosip.kernel.keygenerator.symmetric-key-length=256
#Encrypted data and encrypted symmetric key separator
mosip.kernel.data-key-splitter=#KEY_SPLITTER#
#GCM tag length
mosip.kernel.crypto.gcm-tag-length=128
#Hash algo name
mosip.kernel.crypto.hash-algorithm-name=PBKDF2WithHmacSHA512
#Symmtric key length used in hash
mosip.kernel.crypto.hash-symmetric-key-length=256
#No of iterations in hash
mosip.kernel.crypto.hash-iteration=100000
#Sign algo name
mosip.kernel.crypto.sign-algorithm-name=RS256
#Certificate Sign algo name
mosip.kernel.certificate.sign.algorithm=SHA256withRSA

#mosip.kernel.keymanager.hsm.config-path=local.p12
#mosip.kernel.keymanager.hsm.keystore-type=PKCS12
#mosip.kernel.keymanager.hsm.keystore-pass=${softhsm.idp.pin}

#Type of keystore, Supported Types: PKCS11, PKCS12, Offline, JCE
mosip.kernel.keymanager.hsm.keystore-type=PKCS11
# For PKCS11 provide Path of config file.
# For PKCS12 keystore type provide the p12/pfx file path. P12 file will be created internally so provide only file path & file name.
# For Offline & JCE property can be left blank, specified value will be ignored.
mosip.kernel.keymanager.hsm.config-path=/config/softhsm-application.conf
# Passkey of keystore for PKCS11, PKCS12
# For Offline & JCE proer can be left blank. JCE password use other JCE specific properties.
mosip.kernel.keymanager.hsm.keystore-pass=${softhsm.esignet.dev.security.pin}


mosip.kernel.keymanager.certificate.default.common-name=www.mosip.io
mosip.kernel.keymanager.certificate.default.organizational-unit=MOSIP-TECH-CENTER
mosip.kernel.keymanager.certificate.default.organization=IITB
mosip.kernel.keymanager.certificate.default.location=BANGALORE
mosip.kernel.keymanager.certificate.default.state=KA
mosip.kernel.keymanager.certificate.default.country=IN

mosip.kernel.keymanager.softhsm.certificate.common-name=www.mosip.io
mosip.kernel.keymanager.softhsm.certificate.organizational-unit=MOSIP
mosip.kernel.keymanager.softhsm.certificate.organization=IITB
mosip.kernel.keymanager.softhsm.certificate.country=IN

# Application Id for PMS master key.
mosip.kernel.partner.sign.masterkey.application.id=PMS
mosip.kernel.partner.allowed.domains=DEVICE

mosip.kernel.keymanager-service-validate-url=https://${mosip.hostname}/keymanager/validate
mosip.kernel.keymanager.jwtsign.validate.json=false
mosip.keymanager.dao.enabled=false
crypto.PrependThumbprint.enable=true

## -------------------------------------------- IDP-UI config ----------------------------------------------------------

mosip.esignet.authenticator.default.auth-factor.kba.field-details={{'id':'policyNumber', 'type':'text', 'format':''},{'id':'name', 'type':'text', 'format':''},{'id':'dob', 'type':'date', 'format':'dd/mm/yyyy'}}
mosip.esignet.authenticator.default.auth-factor.kba.individual-id-field='policyNumber'

mosip.esignet.ui.config.key-values={'sbi.env': 'Developer', 'sbi.timeout.DISC': 30, \
  'sbi.timeout.DINFO': 30, 'sbi.timeout.CAPTURE': 30, 'sbi.capture.count.face': 1, 'sbi.capture.count.finger': 1, \
  'sbi.capture.count.iris': 1, 'sbi.capture.score.face': 70, 'sbi.capture.score.finger':70, 'sbi.capture.score.iris':70, \
  'resend.otp.delay.secs': ${mosip.kernel.otp.expiry-time}, \
  'send.otp.channels' : '${mosip.esignet.authenticator.ida.otp-channels}', 'captcha.sitekey' : '${mosip.esignet.captcha-validator.site-key}', \
  'auth.txnid.length' : '${mosip.esignet.auth-txn-id-length}', \
  'auth.factor.kba.individual-id-field' : ${mosip.esignet.authenticator.default.auth-factor.kba.individual-id-field},\
   'auth.factor.kba.field-details':${mosip.esignet.authenticator.default.auth-factor.kba.field-details}}


logging.level.org.springframework.web.client.RestTemplate=INFO
logging.level.io.mosip.esignet=INFO

mosip.kernel.keymgr.hsm.health.check.enabled=false
#mosip.kernel.keymgr.hsm.health.key.app-id=OIDC_SERVICE
#mosip.kernel.keymgr.hsm.healthkey.ref-id=TRANSACTION_CACHE
